// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validator GET -> /accounts and /account/all should have the user id before listing accounts 1`] = `
Object {
  "app": Object {
    "env": "development",
    "proxy": false,
    "subdomainOffset": 2,
  },
  "originalUrl": "/accounts",
  "req": "<original node req>",
  "request": Object {
    "header": Object {
      "userid": 1,
    },
  },
  "res": "<original node res>",
  "response": Object {
    "header": Object {},
    "message": "Ok",
    "status": 200,
  },
  "socket": "<original node socket>",
}
`;

exports[`Validator PATCH -> /accounts/makepartialpayment should have the acount id before make partial payments 1`] = `
Object {
  "app": Object {
    "env": "development",
    "proxy": false,
    "subdomainOffset": 2,
  },
  "originalUrl": "/accounts",
  "req": "<original node req>",
  "request": Object {
    "body": Object {
      "accountId": 1,
    },
  },
  "res": "<original node res>",
  "response": Object {
    "header": Object {},
    "message": Object {
      "errors": Array [
        undefined,
      ],
    },
    "status": 400,
  },
  "socket": "<original node socket>",
}
`;

exports[`Validator POST -> /account should return an account without a request body 1`] = `
Object {
  "app": Object {
    "env": "development",
    "proxy": false,
    "subdomainOffset": 2,
  },
  "originalUrl": "/accounts",
  "req": "<original node req>",
  "request": Object {
    "body": Object {
      "amountPaid": 0,
      "description": "Música",
      "dueDate": "2019-05-06T16:54:37-02:00",
      "isRepeat": true,
      "name": "Spotify",
      "paymentForm": "CREDIT",
      "status": "PENDING",
      "tags": Array [
        "Música",
      ],
      "type": "MONTHLY",
      "userId": 1,
      "value": 16.9,
    },
  },
  "res": "<original node res>",
  "response": Object {
    "header": Object {},
    "message": "Ok",
    "status": 200,
  },
  "socket": "<original node socket>",
}
`;

exports[`Validator POST -> /account should return expired status when the payment date is less than the current date 1`] = `
Object {
  "app": Object {
    "env": "development",
    "proxy": false,
    "subdomainOffset": 2,
  },
  "originalUrl": "/accounts",
  "req": "<original node req>",
  "request": Object {
    "body": Object {
      "amountPaid": 0,
      "description": "Música",
      "dueDate": "2019-05-06T16:54:37-02:00",
      "isRepeat": true,
      "name": "Spotify",
      "paymentForm": "CREDIT",
      "status": "EXPIRED",
      "tags": Array [
        "Música",
      ],
      "type": "MONTHLY",
      "userId": 1,
      "value": 16.9,
    },
  },
  "res": "<original node res>",
  "response": Object {
    "header": Object {},
    "message": "Ok",
    "status": 200,
  },
  "socket": "<original node socket>",
}
`;

exports[`Validator POST -> /account should return the done status when the amount paid is equal to the value of the account 1`] = `
Object {
  "app": Object {
    "env": "development",
    "proxy": false,
    "subdomainOffset": 2,
  },
  "originalUrl": "/accounts",
  "req": "<original node req>",
  "request": Object {
    "body": Object {
      "amountPaid": 100,
      "description": "Música",
      "dueDate": "2019-05-06T16:54:37-02:00",
      "isRepeat": true,
      "name": "Spotify",
      "paymentForm": "CREDIT",
      "status": "DONE",
      "tags": Array [
        "Música",
      ],
      "type": "MONTHLY",
      "userId": 1,
      "value": 100,
    },
  },
  "res": "<original node res>",
  "response": Object {
    "header": Object {},
    "message": "Ok",
    "status": 200,
  },
  "socket": "<original node socket>",
}
`;
